---
layout:     post
title:      "理解AJAX"
subtitle:   ""
date:       2016-11-25
author:     "MaggicQ"
tags:
    - AJAX
    - JavaScript
    - 前端
    - 小结
---

## AJAX

### 准确定义

**AJAX** 全称是  **Asynchronous JavaScript and XML**  ，也就是异步的JavaScript与XML技术，是指综合了多项技术的浏览器端网页开发技术。



### 发展过程

传统的web应用中，服务器每处理一个请求都需要重新加载网页，这样的处理方式效率不高，因为在前后两个页面中的大部分数据是相同的，多次传送相同的数据不仅没有必要，而且是对网络资源的一种浪费，还会造成网站响应时间变长。

为了解决这种情况，AJAX技术逐渐发展了起来。AJAX应用仅向服务器发送并取回必须的数据，并在客户端采用JavaScript处理来自服务器的响应。采用AJAX技术的应用，使得服务器和浏览器之间交换的数据大大变少，不仅加快了应用的响应速度，而且减轻了服务器端的负荷。



### 工作过程



下面是AJAX的工作过程：

 ![How AJAX Works](/img/ajax.gif)



* 在网页上有一个事件被触发，比如网页加载，或者是用户点击了网页中的按键。
* 客户端（浏览器）的JavaScript创建一个**XMLHttpRequest**对象。
* **XMLHttpRequest** 对象向服务器发送一个请求。
* 服务器接受请求并开始处理。
* 服务器响应客户端的请求，并发送相关数据到客户端。
* 服务器的响应到达客户端，客户端使用JavaScript解读响应。
* 网页数据更新。



需要注意的是：

* **AJAX** 可能使用**XML**进行数据传输，但也有可能使用**JSON**进行传送数据，不要被名字所误导。
* **AJAX** 不是一门编程语言，而是一项网页开发技术。
* **AJAX** 的优点在于，允许网页在后台与服务器进行数据交换，使得在不重载网页的情况下，能够较快的更新网页的一部分。现在已经被广泛采用。



### 一个例子：

```javascript
function loadDoc() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
     document.getElementById("demo").innerHTML = this.responseText;
    }
  };
  xhttp.open("GET", "ajax_info.txt", true);
  xhttp.send();
}
```

上面构造的这个函数从服务器请求数据：

* 第一行创建了一个**XMLHttpRequest**对象。
* `onreadystatechange`定义一个函数，当网页准备状态(**readyState**)改变时，这个函数就会被触发。
* **readyState** 表示网页准备状态，4表示请求完成且响应准备完毕。
* **status** 表示网页状态码，200表示网页响应处于正常状态。
* **open** 和 **send** 属于 **XMLHttpRequest** 对象的方法，在这里分别用于请求服务器的数据和返回数据。



## 参考资料

[W3C](http://www.w3schools.com/js/js_ajax_intro.asp)

[维基百科 AJAX](https://zh.wikipedia.org/wiki/AJAX)
