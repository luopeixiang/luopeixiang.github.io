---
layout:     post
title:      "Matlab基础语法"
subtitle:   ""
date:       2016-07-18
author:     "MaggicQ"
header-img: "img/matlab.jpg"
tags:
    - 学习笔记
    - matlab
    - 软件应用
---

最近由于接触到一些算法分析的论文,开始接触到Matlab(以前就知道这个软件,但由于没用到就一直没去学),这时才发现Matlab是一个如此强大的软件.不仅语法简单,在实现复杂的算法方面有天然的优势,而且强大的绘图以及数据分析功能也是其他软件或者是编程语言难以媲美的,简直有一种相见恨晚的感觉,在这里整理了一下学习Matlab的一些笔记,希望能帮到需要的人.

## Matlab基本的语法

### 创建基本的数据类型

给变量赋值：  

    a=1;
    a='hello';
    student.name=luo;  %支持结构体

 合并字符串：

    hebing=[mystr,'-',yourstr]


将数字转换成字符串的函数：

    num2str()

或者是

    int2str()



创建数列(中间可以用空格或者是逗号隔开)：

    a=[1 2 3 4]  


也可以使用区间限定法，方式一：  

    A=first:step:last  

考虑到元素的个数，也可使用方式二指定个数：  


      A=linspace(first,last,n)  



创建矩阵（二维数组），使用分号隔开即可,也可以使用区间限定法：

    a=[1 2 3; 4 5 6;7 8 9]  


用函数创建矩阵

    a=zeros(5,1)   %创建一个5行一列的为零的矩阵


与此类似的函数还有  


  _eye()_：产生单位矩阵   
 _ones()_:产生全部元素为1的矩阵  
 _rand()_:产生0和1之间均匀分布的随机矩阵  

 矩阵的访问：
 采用下标，比如


  A(3,3,)=0  %将矩阵A中第三行第三列的元素修改为0  




### 数组的运算


矩阵a中的值一起加10  

	a+10


翻转一个矩阵：

	a'



matlab默认以浮点数存储数值
但你也可以指定运算的数字格式

比如

	format short %精度比较低
	format long %精度比较高


点乘(element-wise multiplication)，数组的相乘：

	p=a.*a   






矩阵a中的元素一个个三次方：

	a.^3



将两个矩阵行对齐合并 ：

	A=[a,a]


将两个矩阵列对齐合并：

    A=[a;a]

支持复数运算：  

	sqrt(-1)  %这是合法的

你也可以自己使用i或者j来表示虚数单位




取值运算：
matlab中的元素都可以看成是数列，所以可以通过下标取值  


    A=
     15 2 3
     5  11 22
     4  12  33


取出12 的方法

	A(3,2)

或者是：

	A(6)



如果你访问超出数列维度的值，会抛出错误。
但是如果给数列维度外的位置赋值，他会自动补齐其他位置（默认为0），并不会发生错误




列出A矩阵的第二行第三列：

	A(1:3,2)


单独取出第三行

	A(3,:)


### 保存变量的值

在右下空间可以查看变量的值

或者使用whos在命令行窗口打印


这些变量值在你退出matlab后会销毁
但是可以用save命令保留

使用

	save myfile.mat
	%在你当前的工作目录下以myfile.mat文件保存变量值 详情可见save函数

下次你执行：

	load myfile.mat
就可以调用存在里面的变量了。







### 一些常用的函数


取出数列中的最大值

	max(A)




更多用法：

	max(A,B)
依位置对应取出数列A和B的大值


	[maxA,location]=max(A)

将最大值赋给maxA
次大致赋给lication

清空命令行：

    clc


### 快速绘图
下面就是matlab的强项了。
绘制平面图形的命令：

    plot()

见实例：

    x=0:pi/100:2*pi;
    y=sin(x);
    plot(x,y) %以x为横坐标 以y为纵坐标  Amazing!!


你可以指定用什么图线绘制图形


	plot(x,y,'r--')		%用红色虚线
	plot(x,y,'g--')		%用绿色虚线
	plot(x,y,'g:*')  	% ：表示用小点画     *表示着重描出取值点






在一个坐标中绘制多个图形实例(hold on 的使用)：

  >> plot(x,y)
  >> hold on
  >> y2=cos(x);
  >> plot(x,y2,'r:*')
  >> legend('sin','cos') %标出图例



绘制3-D图形：

	surf(X,Y,Z)
适用于绘制类似Z=f(x,y)函数。




实例：

    [X,Y]=meshgrid(-2:.2:2);%meshgrid函数用于生成函数的网格点数据
    Z=X .* exp(-X.^2 - Y.^2);
    surf(X,Y,Z)


### 总结
Matlab是一个十分强大又容易上手的软件，科学上的图像绘制，图像处理以及数值微分计算，数值代数，
微分方程数值解法，最优化方法几乎都离不开它，在这里只是稍微介绍了matlab的一些基础语法，
如果想要继续深入学习并参见更加详细的内容，可以参考[matlab官网](http://cn.mathworks.com/products/matlab/)

顺便安利一下在GNU的一个软件:**Octave** ,可以很好的兼容matlab语法,同时小巧轻便,比如我在linux在安装好才90M左右,但基本的功能完全不逊色于matlab.
