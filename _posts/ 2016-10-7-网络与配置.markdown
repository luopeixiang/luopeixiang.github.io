---
layout:     post
title:      "Linux之网络与配置"
subtitle:   ""
date:       2016-10-7
author:     "MaggicQ"
tags:
    - Unix
    - Linux
    - 网络
---






#  网络与配置

## 数据包

数据被分成一块块在网络上传输，每一块叫做一个数据包，包中分为两部分：头和净荷。头含有一些识别信息，如发送方，接收方，以及基本的协议。净荷则含有实际需要传送的数据。通常操作系统会带有数据包解析的功能。



## 网络层次

一个tcp/ip协议族下的典型互联网栈，从顶部到底部如下所示：

* 应用层：该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。
* 传输层：[传输层](https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82)的协议，能够解决诸如端到端可靠性（“数据是否已经到达目的地？”）和保证数据按照正确的顺序到达这样的问题。
* 网际层：解决在一个单一网络上传输数据包的问题。
* 物理层：网络接口层实际上并不是因特网协议组中的一部分，但是它是数据包从一个设备的网络层传输到另外一个设备的网络层的方法。



> 开放系统互连(**OSI**)参考模型，一种[概念模型](https://zh.wikipedia.org/wiki/%E6%A6%82%E5%BF%B5%E6%A8%A1%E5%9E%8B)，由[国际标准化组织](https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E5%8C%96%E7%BB%84%E7%BB%87)（ISO）提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。1983年定义于ISO/IEC 7498-1。后来随着tcp/ip协议族更能适应现实的需要，现在的计算机网络一般采用的是tcp/ip。





## 查看计算机的IP地址

使用**ifconfig**可以查看ip地址：

```sh
luo@luo-ThinkPad-Edge-E431:~$ ifconfig
enp5s0    Link encap:以太网  硬件地址 28:d2:44:d9:42:d0  
          inet 地址:192.168.24.10  广播:192.168.24.31  掩码:255.255.255.224
          inet6 地址: fe80::8f5c:7700:9744:4347/64 Scope:Link
          inet6 地址: 2001:da8:203:722:5c0a:2c96:e2ff:91c5/64 Scope:Global
          UP BROADCAST RUNNING MULTICAST  MTU:1500  跃点数:1
          接收数据包:265888 错误:0 丢弃:0 过载:0 帧数:0
          发送数据包:213139 错误:0 丢弃:0 过载:0 载波:0
          碰撞:0 发送队列长度:1000
          接收字节:258038109 (258.0 MB)  发送字节:36345423 (36.3 MB)

lo        Link encap:本地环回  
          inet 地址:127.0.0.1  掩码:255.0.0.0
          inet6 地址: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  跃点数:1
          接收数据包:36192 错误:0 丢弃:0 过载:0 帧数:0
          发送数据包:36192 错误:0 丢弃:0 过载:0 载波:0
          碰撞:0 发送队列长度:1
          接收字节:23986346 (23.9 MB)  发送字节:23986346 (23.9 MB)
```

重点关注一下输出的ipv4地址和ipv6地址：

```sh
 inet 地址:192.168.24.10  广播:192.168.24.31  掩码:255.255.255.224
          inet6 地址: fe80::8f5c:7700:9744:4347/64 Scope:Link
          inet6 地址: 2001:da8:203:722:5c0a:2c96:e2ff:91c5/64
```

ipv4是由四个字节（32二进制位）构成的，每个字节的范围是**0-255 **, 从上面可以看出，我的ipv4的地址的第一个字节用十进制数表示是192 , 第二位是168 ,  字节之间用逗号隔开。而ipv6是下一代ip协议，它由十六个字节构成，每个字节用两个16进制数表示，道理相似。



## 子网

子网就是一组相互连接的，带有按序排列的IP地址的主机。通常这组主机会在同一个物理网络中。

划分子网需要考虑**网络前缀**和**子网掩码**（如上面的255.255.255.224），网络前缀是子网中相同的字节，子网掩码则是用二进制的1标记了子网内主机能共用的IP位。

比如你要建立一个包含10.23.2.1到10.23.2.254的子网，那么他们通用的网络前缀就是**10.23.2.0** , 他们的子网掩码就是 **255.255.255.0**



## 基本ICMP和DNS工具

ICMP指的是用于查找路由和连接问题的网际控制报文协议（Internet Control Message Protocol）; DNS指的是使用名称代替ip地址的域名系统（Domain Name Service）。

### ping

ping命令发送一个ICMP请求报文给一台主机，这会使接收者回送报文。比如：

```sh
luo@luo-ThinkPad-Edge-E431:~$ ping www.baidu.com
PING www.a.shifen.com (119.75.217.109) 56(84) bytes of data.
64 bytes from 119.75.217.109: icmp_seq=1 ttl=51 time=2.87 ms
64 bytes from 119.75.217.109: icmp_seq=2 ttl=51 time=2.76 ms
64 bytes from 119.75.217.109: icmp_seq=3 ttl=51 time=2.79 ms
64 bytes from 119.75.217.109: icmp_seq=4 ttl=51 time=2.98 ms
```

其中time指数据包从发出到收回所经历的时间。



### traceroute

这个命令基于ICMP ，执行这个命令可以显示数据包到达主机所走过的路径。实例：

```sh
luo@luo-ThinkPad-Edge-E431:~$ traceroute www.google.com
traceroute to www.google.com (220.255.2.153), 30 hops max, 60 byte packets
 1  * * *
 2  10.100.1.45 (10.100.1.45)  1.152 ms  1.284 ms  1.433 ms
 3  10.100.1.74 (10.100.1.74)  0.819 ms  0.904 ms  1.071 ms
 4  211.71.0.29 (211.71.0.29)  0.600 ms  0.560 ms  0.707 ms
 5  10.254.1.44 (10.254.1.44)  0.875 ms  0.873 ms  1.007 ms
 6  * * *
```

上面只是输出的一部分。其中每一行是一个记录，每个记录表示一个网关，后面的三个时间是探测数据包向每个网关发送的三个数据包所对应的网关响应后的返还的时间。



### host

使用host可以查看域名对应的IP地址，比如：

```sh
luo@luo-ThinkPad-Edge-E431:~$ host www.google.com
www.google.com has address 216.58.199.228
www.google.com has IPv6 address 2404:6800:400a:807::2004
```

可以看到，执行host命令之后，输出里面有这个主机的两个ip地址。有ipv6地址说明这个主机已经支持下一代互联网协议。

##  

## 以太网



以太网是最常见的物理层 。他们有一些共同的特性：

* 所有以太网都有各自的 _介质访问控制_（Media Access Control ， 简称MAC）地址，这也叫硬件地址，与主机的IP地址无关，它在主机所处的以太网中是唯一的。
* 以太网上的设备以帧的形式发送信息，帧里面除了实际的数据，还有发送者和接收者的MAC地址。

## 一些网络配置管理器

基于Linux的系统都有一些自动配置网络的方法。比如桌面端或笔记本端常用的NetworkManager 。 用于更小型的嵌入式系统的网络配置管理程序有：

* OpenWRT的netifd
* Android的ConnectivityManager服务
* ConnMan

>  **NetworkMangaer**是当前比较受欢迎的一个网络配置管理器，它是一个开机时系统就启动的守护进程。跟其他守护进程一样，它不依赖桌面组件，它的任务是监听系统和用户的事件，并根据一堆规则来改变网络配置。





### 解析主机名

现在的自动网络配置服务，如DHCP，几乎总是包含DNS的配置。Linux网络应用做DNS查找的步骤基本如下：

* 应用调用一个函数，去查找主机名对应的IP。
* 当该函数运行时，它会根据`/etc/nsswitch.conf`内制定的规则来决定查找的计划。比如：通常是现在本地文件`/etc/hosts`里做检查，再使用DNS。
* 若没在上述本地文件里找到ip地址，就使用DNS，先要找到DNS服务器（在另外的一个文件里有DNS服务器的IP）
* 该函数发送一个DNS查询的请求给DNS服务器。
* DNS服务器将请求中主机名对应的IP返回给函数，再由函数返回给应用。

一般的做法是在`/etc/resolv.conf`文件中制定DNS服务器。

在`/etc/nsswitch.conf`文件中掌管着一些域名相关的优先级设定，其中关于DNS设定中有这么一行：

```sh
hosts:          files mdns4_minimal [NOTFOUND=return] dns
```

files在dns之前，说明系统解析主机名时，会闲查找`/etc/hosts`再查找DNS服务器。



## 传输层：TCP与UDP



**TCP**(传输控制协议)和**UDP**（用户数据报协议）是两个最常用的传输层协议，它们能让网络层的包与应用层的需求无缝连接。

### TCP端口与连接

在TCP协议中，不同的网络应用使用不同的网络端口。端口是一个数字，是在本机上对应用的划分，不同的应用使用不同的端口，数据传输才不会产生混乱。

使用TCP时，应用会在本机的一个端口和远程机器的一个端口之间建立连接。使用`netstat`命令可以帮助我们查看系统的连接：

```sh
luo@luo-ThinkPad-Edge-E431:~$ netstat -nt
激活Internet连接 (w/o 服务器)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 192.168.24.10:58246     220.255.2.153:443       ESTABLISHED
tcp        1      0 192.168.24.10:59672     223.252.199.7:80        CLOSE_WAIT
tcp        0      0 192.168.24.10:58238     220.255.2.153:443       ESTABLISHED
tcp        0      0 192.168.24.10:40452     223.252.199.6:6003      ESTABLISHED
tcp        0      0 192.168.24.10:58234     220.255.2.153:443       ESTABLISHED
```

`-n`表示不用对主机名进行DNS解析，而`-t`表示则是只输出TCP连接。

比如其中的一条记录：

```sh
tcp        0      0 192.168.24.10:58246     220.255.2.153:443       ESTABLISHED
```

表示机器上有个应用使用了`192.168.24.10`的ip地址以及`58246`的端口与远程的ip地址为`220.255.2.153`的机器上的`443`端口进行了通信。



端口被分为三类：众所周知的、注册的和动态/私有的。众所周知的端口号是由[因特网赋号管理局](https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E8%B5%8B%E5%8F%B7%E7%AE%A1%E7%90%86%E5%B1%80)（IANA）来分配的，并且通常被用于系统一级或根进程，比如http使用80端口，ssh服务使用22端口，私有端口一般是1023（不包括1023）以后的数字，tcp中公认端口及其对应的服务列表可以参考 [TCP/UDP端口列表](https://zh.wikipedia.org/wiki/TCP/UDP%E7%AB%AF%E5%8F%A3%E5%88%97%E8%A1%A8)



而注册的端口号通常被用来作为终端用户连接服务器时短暂地使用的源端口号，但它们也可以用来标识已被第三方注册了的、被命名的服务。动态/私有的端口号在任何特定的TCP连接外不具有任何意义。可能的、被正式承认的端口号有65535个。

> * 使用命令`netstat -ntl`可以列出你的机器正在监听的TCP端口。
> * 在配置文件`/etc/service`中也可以查看一些常用端口及其服务的名字。



### UDP与TCP的简单比较

比起TCP，UDP是一种简单得多的传输协议。它们的主要区别有：

- TCP是面向连接的、可靠的、有序的、速度慢的协议；UDP是无连接的、不可靠的、无序的、速度快的协议。
- TCP开销比UDP大，TCP头部需要20字节，UDP头部只要8个字节。
- TCP无界有拥塞控制，TCP有界无拥塞控制。


- 基于TCP的协议有：HTTP/HTTPS，Telnet，FTP，SMTP。
- 基于UDP的协议有：DHCP，DNS，SNMP，TFTP，BOOTP。
